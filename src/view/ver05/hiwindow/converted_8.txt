hiWindow.document.writeln("<!DOCTYPE html>");
hiWindow.document.writeln("<html lang=\"en\">");
hiWindow.document.writeln("<head>");
hiWindow.document.writeln("    <meta charset=\"UTF-8\">");
hiWindow.document.writeln("    <title>Insert Hours</title>");
hiWindow.document.writeln("    <style>");
hiWindow.document.writeln("        body {");
hiWindow.document.writeln("            background: linear-gradient(0.25turn, #e5e5e5, #b6b6b6, #e5e5e5);");
hiWindow.document.writeln("        }");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("        label {");
hiWindow.document.writeln("            color: #939393;");
hiWindow.document.writeln("        }");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("        input {");
hiWindow.document.writeln("            background: #e8ffe5;");
hiWindow.document.writeln("            font-size: 16px;");
hiWindow.document.writeln("            border-radius: 15px;");
hiWindow.document.writeln("            border-width: 0px;");
hiWindow.document.writeln("            padding: 5px;");
hiWindow.document.writeln("            padding-left: 20px;");
hiWindow.document.writeln("            margin: 5px;");
hiWindow.document.writeln("            width: 600px;");
hiWindow.document.writeln("            height: 32px;");
hiWindow.document.writeln("        }");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("        input#hoursAmount {");
hiWindow.document.writeln("            width: 50px;");
hiWindow.document.writeln("        }");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("        select {");
hiWindow.document.writeln("            background: #e8ffe5;");
hiWindow.document.writeln("            font-size: 16px;");
hiWindow.document.writeln("            border-radius: 15px;");
hiWindow.document.writeln("            border-width: 0px;");
hiWindow.document.writeln("            padding: 5px;");
hiWindow.document.writeln("            padding-left: 20px;");
hiWindow.document.writeln("            margin: 5px;");
hiWindow.document.writeln("            width: 625px;");
hiWindow.document.writeln("            height: 40px;");
hiWindow.document.writeln("        }");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("        input#insertButton {");
hiWindow.document.writeln("            background: #9cff62;");
hiWindow.document.writeln("            box-shadow: 3px 3px 0 #000000;");
hiWindow.document.writeln("            width: 150px;");
hiWindow.document.writeln("            height: 40px;");
hiWindow.document.writeln("            border-width: 3px;");
hiWindow.document.writeln("            padding-left: 0px;");
hiWindow.document.writeln("            margin-left: 50px;");
hiWindow.document.writeln("        }");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("        input#removeButton {");
hiWindow.document.writeln("            background: #ff6262;");
hiWindow.document.writeln("            box-shadow: 3px 3px 0 #000000;");
hiWindow.document.writeln("            transition: all .15s linear 0s;");
hiWindow.document.writeln("            position: relative;");
hiWindow.document.writeln("            display: inline-block;");
hiWindow.document.writeln("            width: 150px;");
hiWindow.document.writeln("            height: 40px;");
hiWindow.document.writeln("            border-width: 3px;");
hiWindow.document.writeln("            padding-left: 0px;");
hiWindow.document.writeln("            margin-left: 20px;");
hiWindow.document.writeln("        }");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("        input#insertButton:active {");
hiWindow.document.writeln("            background: #63a83b;");
hiWindow.document.writeln("            box-shadow: 0px 0px 0 #000000;");
hiWindow.document.writeln("            transition: all .05s linear 0s;");
hiWindow.document.writeln("            top: 3px;");
hiWindow.document.writeln("            left: 3px;");
hiWindow.document.writeln("            position: relative;");
hiWindow.document.writeln("        }");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("        input#insertButton:hover {");
hiWindow.document.writeln("            border-color: #0014ff;");
hiWindow.document.writeln("        }");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("        input#removeButton:active {");
hiWindow.document.writeln("            background: #ad3f3f;");
hiWindow.document.writeln("            box-shadow: 0px 0px 0 #000000;");
hiWindow.document.writeln("            transition: all .05s linear 0s;");
hiWindow.document.writeln("            top: 3px;");
hiWindow.document.writeln("            left: 3px;");
hiWindow.document.writeln("            position: relative;");
hiWindow.document.writeln("        }");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("        input#removeButton:hover {");
hiWindow.document.writeln("            border-color: #0014ff;");
hiWindow.document.writeln("        }");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("        input#removeButton:active {");
hiWindow.document.writeln("            background: #ad3f3f;");
hiWindow.document.writeln("            box-shadow: 0px 0px 0 #000000;");
hiWindow.document.writeln("            transition: all .05s linear 0s;");
hiWindow.document.writeln("            top: 3px;");
hiWindow.document.writeln("            left: 3px;");
hiWindow.document.writeln("            position: relative;");
hiWindow.document.writeln("        }");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("        input#removeButton:hover {");
hiWindow.document.writeln("            border-color: #0014ff;");
hiWindow.document.writeln("        }");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("        input#writeToTxtButton {");
hiWindow.document.writeln("            font-size: 10px;");
hiWindow.document.writeln("            font-weight: bold;");
hiWindow.document.writeln("            background: #ffe786;");
hiWindow.document.writeln("            box-shadow: 3px 3px 0 #000000;");
hiWindow.document.writeln("            transition: all .15s linear 0s;");
hiWindow.document.writeln("            position: relative;");
hiWindow.document.writeln("            display: inline-block;");
hiWindow.document.writeln("            width: 55px;");
hiWindow.document.writeln("            height: 40px;");
hiWindow.document.writeln("            border-width: 3px;");
hiWindow.document.writeln("            padding-left: 0px;");
hiWindow.document.writeln("            margin-left: 20px;");
hiWindow.document.writeln("        }");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("        input#writeToTxtButton:active {");
hiWindow.document.writeln("            background: #bdaa64;");
hiWindow.document.writeln("            box-shadow: 0px 0px 0 #000000;");
hiWindow.document.writeln("            transition: all .05s linear 0s;");
hiWindow.document.writeln("            top: 3px;");
hiWindow.document.writeln("            left: 3px;");
hiWindow.document.writeln("            position: relative;");
hiWindow.document.writeln("        }");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("        input#writeToTxtButton:hover {");
hiWindow.document.writeln("            border-color: #0014ff;");
hiWindow.document.writeln("        }");
hiWindow.document.writeln(" ");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("        input#readTxtButton {");
hiWindow.document.writeln("            font-size: 10px;");
hiWindow.document.writeln("            font-weight: bold;");
hiWindow.document.writeln("            background: #c987ff;");
hiWindow.document.writeln("            box-shadow: 3px 3px 0 #000000;");
hiWindow.document.writeln("            transition: all .15s linear 0s;");
hiWindow.document.writeln("            position: relative;");
hiWindow.document.writeln("            display: inline-block;");
hiWindow.document.writeln("            width: 55px;");
hiWindow.document.writeln("            height: 40px;");
hiWindow.document.writeln("            border-width: 3px;");
hiWindow.document.writeln("            padding-left: 0px;");
hiWindow.document.writeln("            margin-left: 5px;");
hiWindow.document.writeln("        }");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("        input#readTxtButton:active {");
hiWindow.document.writeln("            background: #9460bd;");
hiWindow.document.writeln("            box-shadow: 0px 0px 0 #000000;");
hiWindow.document.writeln("            transition: all .05s linear 0s;");
hiWindow.document.writeln("            top: 3px;");
hiWindow.document.writeln("            left: 3px;");
hiWindow.document.writeln("            position: relative;");
hiWindow.document.writeln("        }");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("        input#readTxtButton:hover {");
hiWindow.document.writeln("            border-color: #0014ff;");
hiWindow.document.writeln("        }");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("        div#statusMessage {");
hiWindow.document.writeln("            font-size: 16px;");
hiWindow.document.writeln("            color: #939393;");
hiWindow.document.writeln("            margin-top: 10px;");
hiWindow.document.writeln("            font-weight: normal;");
hiWindow.document.writeln("        }");
hiWindow.document.writeln("    </style>");
hiWindow.document.writeln("</head>");
hiWindow.document.writeln("<body>");
hiWindow.document.writeln("<form>");
hiWindow.document.writeln("    <table>");
hiWindow.document.writeln("        <tr>");
hiWindow.document.writeln("            <td>");
hiWindow.document.writeln("                <label for=\"filterTasks\">Filter: </label>");
hiWindow.document.writeln("            </td>");
hiWindow.document.writeln("            <td>");
hiWindow.document.writeln("                <input type=\"text\" id=\"filterTasks\" value=\"\" onkeyup=\"findTasksFilterAndSetToMenu()\">");
hiWindow.document.writeln("            </td>");
hiWindow.document.writeln("        </tr>");
hiWindow.document.writeln("        <tr>");
hiWindow.document.writeln("            <td>");
hiWindow.document.writeln("                <label for=\"foundTasks\">Task: </label>");
hiWindow.document.writeln("            </td>");
hiWindow.document.writeln("            <td>");
hiWindow.document.writeln("                <select id=\"foundTasks\">");
hiWindow.document.writeln("                </select>");
hiWindow.document.writeln("            </td>");
hiWindow.document.writeln("        </tr>");
hiWindow.document.writeln("        <tr>");
hiWindow.document.writeln("            <td>");
hiWindow.document.writeln("                <label for=\"hoursAmount\">Hours:</label>");
hiWindow.document.writeln("            </td>");
hiWindow.document.writeln("            <td>");
hiWindow.document.writeln("                <input type=\"text\" id=\"hoursAmount\" value=\"40\" size=\"100px\">");
hiWindow.document.writeln("                <input type=\"button\" id=\"insertButton\" value=\"INSERT\" onclick=\"insertHours()\">");
hiWindow.document.writeln("                <input type=\"button\" id=\"removeButton\" value=\"REMOVE\" onclick=\"removeHours()\">");
hiWindow.document.writeln("                <input type=\"button\" id=\"writeToTxtButton\" value=\"writeTXT\" onclick=\"writeToTxtFile()\">");
hiWindow.document.writeln("                <input type=\"button\" id=\"readTxtButton\" value=\"parseTXT\" onclick=\"readTxtFile()\">");
hiWindow.document.writeln("            </td>");
hiWindow.document.writeln("        </tr>");
hiWindow.document.writeln("        <tr>");
hiWindow.document.writeln("            <td></td>");
hiWindow.document.writeln("            <td>");
hiWindow.document.writeln("                <div id=\"statusMessage\">Waiting for pressing some button...</div>");
hiWindow.document.writeln("            </td>");
hiWindow.document.writeln("        </tr>");
hiWindow.document.writeln("    </table>");
hiWindow.document.writeln("</form>");
hiWindow.document.writeln("<script>");
hiWindow.document.writeln("    let foundFiltered = [];");
hiWindow.document.writeln("    let foundId = new Map();");
hiWindow.document.writeln("    let sumHoursForTask = [];");
hiWindow.document.writeln("    let task = \"\";");
hiWindow.document.writeln("    let hours = \"\";");
hiWindow.document.writeln("    const status = document.querySelector('#statusMessage');");
hiWindow.document.writeln("    document.querySelectorAll('input[id=filterTasks]')[0].onkeyup();");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("    function findTasksFilterAndSetToMenu() {");
hiWindow.document.writeln("        //console.log(\"filter\");");
hiWindow.document.writeln("        //clear task list");
hiWindow.document.writeln("        const foundTasks = document.querySelector('#foundTasks');");
hiWindow.document.writeln("        while (foundTasks.firstChild) {");
hiWindow.document.writeln("            foundTasks.removeChild(foundTasks.lastChild);");
hiWindow.document.writeln("        }");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("        //find tasks");
hiWindow.document.writeln("        let found = [];");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("        var taskTable = window.opener.document.querySelector('#table3'); //put here window.opener.  <<<<<<");
hiWindow.document.writeln("        var tasksRows = taskTable.children[1];");
hiWindow.document.writeln("        let iFound = -1;");
hiWindow.document.writeln("        for (let i = 1; i < tasksRows.children.length; i++) {");
hiWindow.document.writeln("            let taskCell = tasksRows.children[i];");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("            let taskName = taskCell.children[1].textContent.replaceAll(\"\\n\", \"\").replaceAll(\"\\t\", \"\");");
hiWindow.document.writeln("            if (taskName.includes(\"Project:\") || taskName.includes(\"Misc -\")) {");
hiWindow.document.writeln("                continue;");
hiWindow.document.writeln("            }");
hiWindow.document.writeln("            iFound = iFound + 1;");
hiWindow.document.writeln("            if (found.includes(taskName)) {");
hiWindow.document.writeln("                taskName = taskName + \"_duplicated\";");
hiWindow.document.writeln("            }");
hiWindow.document.writeln("            found.push(taskName);");
hiWindow.document.writeln("            // found.push(i + \")\" + taskCell.children[1].textContent.replaceAll(\"\\n\",\"\"));");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("            foundId.set(found[iFound], i);");
hiWindow.document.writeln("            //console.log(found[iFound] + \"id = \" + i);");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("            // finding sum hours --------------");
hiWindow.document.writeln("            var sumHoursTable = window.opener.document.querySelector('#table5');  //put here window.opener.  <<<<<<");
hiWindow.document.writeln("            var sumHoursTableTBody = sumHoursTable.children[1];");
hiWindow.document.writeln("            var sumHoursTableTBodyTR = sumHoursTableTBody.children[i];");
hiWindow.document.writeln("            var sumHoursTableTBodyTD = sumHoursTableTBodyTR.children[0];");
hiWindow.document.writeln("            var sumHoursTableTBodyTDsubtable = sumHoursTableTBodyTD.children[0];");
hiWindow.document.writeln("            var sumHours = sumHoursTableTBodyTDsubtable.children[0].children[0].children[1].children[0].textContent;");
hiWindow.document.writeln("            //console.log(\"sumHours=\" + sumHours);");
hiWindow.document.writeln("            sumHoursForTask.push(sumHours);");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("            //console.log(sumHoursForTask);");
hiWindow.document.writeln("            // finding sum hours");
hiWindow.document.writeln("        }");
hiWindow.document.writeln("        //console.log(foundId);");
hiWindow.document.writeln("        //console.log(foundId.get(found[4]));");
hiWindow.document.writeln("        //find tasks");
hiWindow.document.writeln(" ");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("        //filter");
hiWindow.document.writeln("        let filter = document.querySelector('#filterTasks').value;");
hiWindow.document.writeln("        filter = filter.toLowerCase();");
hiWindow.document.writeln("        let words = filter.split(\" \");");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("        foundFiltered = [];");
hiWindow.document.writeln("        found.forEach(task => {");
hiWindow.document.writeln("            let taskLowerCase = task.toLowerCase();");
hiWindow.document.writeln("            let taskShallBeAdded = true;");
hiWindow.document.writeln("            words.forEach(word => {");
hiWindow.document.writeln("                if (taskLowerCase.search(word) === -1 && word !== \"\") {");
hiWindow.document.writeln("                    taskShallBeAdded = false;");
hiWindow.document.writeln("                }");
hiWindow.document.writeln("            });");
hiWindow.document.writeln("            if (taskShallBeAdded) {");
hiWindow.document.writeln("                foundFiltered.push(task);");
hiWindow.document.writeln("            }");
hiWindow.document.writeln("        });");
hiWindow.document.writeln(" ");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("        let i = 0;");
hiWindow.document.writeln("        foundFiltered.forEach(found => {");
hiWindow.document.writeln("            let newOption = new Option(found);");
hiWindow.document.writeln("            i++;");
hiWindow.document.writeln("            let id = \"foundTask-\" + i;");
hiWindow.document.writeln("            newOption.setAttribute('value', found);");
hiWindow.document.writeln("            newOption.setAttribute('id', id);");
hiWindow.document.writeln("            foundTasks.add(newOption);");
hiWindow.document.writeln("        })");
hiWindow.document.writeln("    }");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("    function insertHours() {");
hiWindow.document.writeln("        task = document.querySelector('#foundTasks').value;");
hiWindow.document.writeln("        // hours = parseFloat(document.querySelector('#hoursAmount').value);");
hiWindow.document.writeln("        if (parseFloat(\"0,1\") === 0) {");
hiWindow.document.writeln("            hours = parseFloat(document.querySelector('#hoursAmount').value.replaceAll(\",\", \".\"));");
hiWindow.document.writeln("        } else {");
hiWindow.document.writeln("            hours = parseFloat(document.querySelector('#hoursAmount').value.replaceAll(\".\", \",\"));");
hiWindow.document.writeln("        }");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("        let taskId = foundId.get(task);");
hiWindow.document.writeln("        status.textContent = hours + \" hours were inserted to \" + task;");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("        //insert hours");
hiWindow.document.writeln("        // ! be careful with these");
hiWindow.document.writeln("        let bgColorDefaultExpected = \"white\";");
hiWindow.document.writeln("        let bgColorPartialHoursExpected = \"rgb(205, 226, 183)\";");
hiWindow.document.writeln("        let maxHoursDaily = 8;");
hiWindow.document.writeln("        // ! be careful with these");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("        let shallInsertHours = false;");
hiWindow.document.writeln("        let totalDayHours = 0;");
hiWindow.document.writeln("        var totalDayHoursTable = window.opener.document.querySelector('#table7');  //put here window.opener.  <<<<<<");
hiWindow.document.writeln("        var dayHoursTable = window.opener.document.querySelector('#table4');  //put here window.opener.  <<<<<<");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("        var totalDayHoursRows = totalDayHoursTable.children[1];");
hiWindow.document.writeln("        var totalDayHoursCells = totalDayHoursRows.children[1];");
hiWindow.document.writeln("        for (let i = 0; i < totalDayHoursCells.children.length; i++) {");
hiWindow.document.writeln("            let dayHoursComponent = totalDayHoursCells.children[i];");
hiWindow.document.writeln("            let dayHoursBackgroundColor = dayHoursComponent.style.getPropertyValue(\"background-color\");");
hiWindow.document.writeln("            shallInsertHours = (dayHoursBackgroundColor === bgColorPartialHoursExpected || dayHoursBackgroundColor === bgColorDefaultExpected);");
hiWindow.document.writeln("            if (shallInsertHours) {");
hiWindow.document.writeln("                let totalDayHoursText = dayHoursComponent.textContent;");
hiWindow.document.writeln("                totalDayHours = parseFloat(totalDayHoursText);");
hiWindow.document.writeln("                //console.log(\"Day \" + i + \" -> \" + totalDayHours);");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("                if (totalDayHours < maxHoursDaily && hours > parseFloat(0)) {");
hiWindow.document.writeln("                    let freeHours = maxHoursDaily - totalDayHours;");
hiWindow.document.writeln("                    let hoursToInsert = freeHours <= hours ? freeHours : hours;");
hiWindow.document.writeln("                    //console.log(\"YES, insert hours here: \" + hoursToInsert + \" from \" + hours + \"| i = \" + i + \",taskId=\" + taskId);");
hiWindow.document.writeln("                    hours = hours - hoursToInsert;");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("                    //var dayHoursTable = document.querySelector('#table4');");
hiWindow.document.writeln("                    let dayHoursTBody = dayHoursTable.children[1];");
hiWindow.document.writeln("                    let dayHoursRow = dayHoursTBody.children[taskId];  //taskId=3");
hiWindow.document.writeln("                    let dayHoursCell = dayHoursRow.children[i]; //i=0");
hiWindow.document.writeln("                    let dayHoursInput = dayHoursCell.children[0];");
hiWindow.document.writeln("                    let currentHours;");
hiWindow.document.writeln("                    if (dayHoursInput.value === '' || dayHoursInput.value === null) {");
hiWindow.document.writeln("                        currentHours = parseFloat('0');");
hiWindow.document.writeln("                    } else {");
hiWindow.document.writeln("                        if (parseFloat(\"0,1\") === 0) {");
hiWindow.document.writeln("                            currentHours = parseFloat(dayHoursInput.value.replaceAll(\",\", \".\"));");
hiWindow.document.writeln("                        } else {");
hiWindow.document.writeln("                            currentHours = parseFloat(dayHoursInput.value.replaceAll(\".\", \",\"));");
hiWindow.document.writeln("                        }");
hiWindow.document.writeln("                        // currentHours = parseFloat(dayHoursInput.value);");
hiWindow.document.writeln("                    }");
hiWindow.document.writeln("                    dayHoursInput.value = currentHours + hoursToInsert;");
hiWindow.document.writeln("                    dayHoursInput.onchange();");
hiWindow.document.writeln("                    // validateAllFields();");
hiWindow.document.writeln("                    window.opener.document.querySelectorAll('input[id=validateAllFieldsButton]')[0].click();");
hiWindow.document.writeln("                }");
hiWindow.document.writeln("            }");
hiWindow.document.writeln("        }");
hiWindow.document.writeln("    }");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("    function removeHours() {");
hiWindow.document.writeln("        task = document.querySelector('#foundTasks').value;");
hiWindow.document.writeln("        // hours = parseFloat(document.querySelector('#hoursAmount').value);");
hiWindow.document.writeln("        if (parseFloat(\"0,1\") === 0) {");
hiWindow.document.writeln("            hours = parseFloat(document.querySelector('#hoursAmount').value.replaceAll(\",\", \".\"));");
hiWindow.document.writeln("        } else {");
hiWindow.document.writeln("            hours = parseFloat(document.querySelector('#hoursAmount').value.replaceAll(\".\", \",\"));");
hiWindow.document.writeln("        }");
hiWindow.document.writeln("        let taskId = foundId.get(task);");
hiWindow.document.writeln("        status.textContent = hours + \" hours were removed from \" + task;");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("        //insert hours");
hiWindow.document.writeln("        // ! be careful with these");
hiWindow.document.writeln("        let maxHoursDaily = 8;");
hiWindow.document.writeln("        // ! be careful with these");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("        let shallRemoveHours = false;");
hiWindow.document.writeln("        let totalDayHours = 0;");
hiWindow.document.writeln("        var totalDayHoursTable = window.opener.document.querySelector('#table7');  //put here window.opener.  <<<<<<");
hiWindow.document.writeln("        var dayHoursTable = window.opener.document.querySelector('#table4');  //put here window.opener.  <<<<<<");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("        var totalDayHoursRows = totalDayHoursTable.children[1];");
hiWindow.document.writeln("        var totalDayHoursCells = totalDayHoursRows.children[1];");
hiWindow.document.writeln("        for (let i = totalDayHoursCells.children.length - 1; i >= 0; i--) {");
hiWindow.document.writeln("            let dayHoursComponent = totalDayHoursCells.children[i];");
hiWindow.document.writeln("            let totalDayHoursText = dayHoursComponent.textContent;");
hiWindow.document.writeln("            totalDayHours = parseFloat(totalDayHoursText);");
hiWindow.document.writeln("            //console.log(\"Day \" + i + \" -> \" + totalDayHours);");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("            //var dayHoursTable = document.querySelector('#table4');");
hiWindow.document.writeln("            let dayHoursTBody = dayHoursTable.children[1];");
hiWindow.document.writeln("            let dayHoursRow = dayHoursTBody.children[taskId];  //taskId=5");
hiWindow.document.writeln("            let dayHoursCell = dayHoursRow.children[i]; //i=0");
hiWindow.document.writeln("            let dayHoursInput = dayHoursCell.children[0];");
hiWindow.document.writeln("            let currentHours;");
hiWindow.document.writeln("            if (dayHoursInput.value === null || dayHoursInput.value === \"\") {");
hiWindow.document.writeln("                currentHours = parseFloat(\"0\");");
hiWindow.document.writeln("            } else {");
hiWindow.document.writeln("                if (parseFloat(\"0,1\") === 0) {");
hiWindow.document.writeln("                    currentHours = parseFloat(dayHoursInput.value.replaceAll(\",\", \".\"));");
hiWindow.document.writeln("                } else {");
hiWindow.document.writeln("                    currentHours = parseFloat(dayHoursInput.value.replaceAll(\".\", \",\"));");
hiWindow.document.writeln("                }");
hiWindow.document.writeln("                // currentHours = parseFloat(dayHoursInput.value);");
hiWindow.document.writeln("            }");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("            shallRemoveHours = currentHours > parseFloat('0') && hours !== parseFloat('0');");
hiWindow.document.writeln("            if (shallRemoveHours) {");
hiWindow.document.writeln("                let hoursToRemove = currentHours <= hours ? currentHours : hours;");
hiWindow.document.writeln("                //console.log(\"YES, remove hours here: \" + hoursToRemove + \" from \" + hours + \"| i = \" + i + \",taskId=\" + taskId);");
hiWindow.document.writeln("                hours = hours - hoursToRemove;");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("                dayHoursInput.value = currentHours - hoursToRemove;");
hiWindow.document.writeln("                try {");
hiWindow.document.writeln("                    dayHoursInput.onchange();");
hiWindow.document.writeln("                } catch (error) {");
hiWindow.document.writeln("                    //console.log(\"Upps: some strange error :-(\");");
hiWindow.document.writeln("                }");
hiWindow.document.writeln("                //validateAllFields();");
hiWindow.document.writeln("                window.opener.document.querySelectorAll('input[id=validateAllFieldsButton]')[0].click();");
hiWindow.document.writeln("                window.opener.document.querySelectorAll('input[id=clearZerosButton]')[0].click();");
hiWindow.document.writeln("            }");
hiWindow.document.writeln("        }");
hiWindow.document.writeln("        ;");
hiWindow.document.writeln("    }");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("    function writeToTxtFile() {");
hiWindow.document.writeln("        let fondTasks = document.querySelector('#foundTasks').children");
hiWindow.document.writeln("        hours = document.querySelector('#hoursAmount').value;");
hiWindow.document.writeln("        status.textContent = \"Filtered tasks were written to a txt file.\";");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("        // open file in order to write a file & what to write");
hiWindow.document.writeln("        async function writeFile() {");
hiWindow.document.writeln("            const options = {");
hiWindow.document.writeln("                // suggestedName: 'ppm_hours_',");
hiWindow.document.writeln("                types: [");
hiWindow.document.writeln("                    {");
hiWindow.document.writeln("                        description: 'Text Files',");
hiWindow.document.writeln("                        accept: {");
hiWindow.document.writeln("                            'text/plain': ['.txt'],");
hiWindow.document.writeln("                        },");
hiWindow.document.writeln("                    },");
hiWindow.document.writeln("                ],");
hiWindow.document.writeln("            };");
hiWindow.document.writeln("            const fileHandle = await window.showSaveFilePicker(options);");
hiWindow.document.writeln("            const writable = await fileHandle.createWritable();");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("            var creationDate = new Date();");
hiWindow.document.writeln("            var creationDateFormatted = +creationDate.getFullYear() + \"-\" + (creationDate.getMonth() + 1) + \"-\" + creationDate.getDate()");
hiWindow.document.writeln("                + \"_\" + creationDate.getHours() + \"-\" + creationDate.getMinutes() + \"-\" + creationDate.getSeconds();");
hiWindow.document.writeln("            await writable.write(\"# Created in \" + creationDateFormatted + \".\\n\");");
hiWindow.document.writeln("            await writable.write(\"#------------------------------------------------------------------------------------\\n\");");
hiWindow.document.writeln("            await writable.write(\"#<-- use this for comments.\\n\");");
hiWindow.document.writeln("            await writable.write(\"# Content:\\n\");");
hiWindow.document.writeln("            await writable.write(\"# List of task names, below each current total hours.\\n\");");
hiWindow.document.writeln("            await writable.write(\"# In order to increase or decrease hours, write +XXX or -XXX, for example:\\n\");");
hiWindow.document.writeln("            await writable.write(\"#     |====1) My great task\\n\");");
hiWindow.document.writeln("            await writable.write(\"#     |12\\n\");");
hiWindow.document.writeln("            await writable.write(\"#     |-2\\n\");");
hiWindow.document.writeln("            await writable.write(\"#     |+6\\n\");");
hiWindow.document.writeln("            await writable.write(\"# So current hours for Task 1 is 12h, it will be decreased by 2h and increased by 6h.\\n\");");
hiWindow.document.writeln("            await writable.write(\"# Current hours are not required, can be deleted from this file.\\n\");");
hiWindow.document.writeln("            await writable.write(\"#------------------------------------------------------------------------------------\\n\");");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("            for (let i = 0; i < fondTasks.length; i++) {");
hiWindow.document.writeln("                let foundTask = fondTasks[i].value;");
hiWindow.document.writeln("                await writable.write(\"====\" + foundTask + \"\\n\");");
hiWindow.document.writeln("                await writable.write(200 + \"\\n\");");
hiWindow.document.writeln("                let sumHours = sumHoursForTask[i];");
hiWindow.document.writeln("                await writable.write(sumHours + \" #SUM\\n\");");
hiWindow.document.writeln("                //console.log(\"sum=\" + sumHours + \"\\n\");");
hiWindow.document.writeln("            }");
hiWindow.document.writeln("            await writable.close();");
hiWindow.document.writeln("        }");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("        // writting a file");
hiWindow.document.writeln("        async function parseWriteFile() {");
hiWindow.document.writeln("            await writeFile();");
hiWindow.document.writeln("        }");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("        parseWriteFile()");
hiWindow.document.writeln("    }");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("    function readTxtFile() {");
hiWindow.document.writeln("        task = document.querySelector('#foundTasks').value;");
hiWindow.document.writeln("        hours = document.querySelector('#hoursAmount').value;");
hiWindow.document.writeln("        status.textContent = \"Parsing given txt file.\";");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("        //reading file");
hiWindow.document.writeln("        async function getFileHandle() {");
hiWindow.document.writeln("            const options = {");
hiWindow.document.writeln("                types: [");
hiWindow.document.writeln("                    {");
hiWindow.document.writeln("                        description: 'Text Files',");
hiWindow.document.writeln("                        accept: {");
hiWindow.document.writeln("                            'text/plain': ['.txt'],");
hiWindow.document.writeln("                        },");
hiWindow.document.writeln("                    },");
hiWindow.document.writeln("                ],");
hiWindow.document.writeln("            };");
hiWindow.document.writeln("            const [fileHandle] = await window.showOpenFilePicker(options);");
hiWindow.document.writeln("            return fileHandle;");
hiWindow.document.writeln("        }");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("        async function readFile() {");
hiWindow.document.writeln("            const fileHandle = await getFileHandle();");
hiWindow.document.writeln("            const file = await fileHandle.getFile();");
hiWindow.document.writeln("            const content = await file.text();");
hiWindow.document.writeln("            return content;");
hiWindow.document.writeln("        }");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("        // parsing read txt file");
hiWindow.document.writeln("        async function parseReadTxt() {");
hiWindow.document.writeln("            const content = await readFile();");
hiWindow.document.writeln("            // //console.log(content);");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("            let lines = content.replaceAll(\"\\r\", \"\").split(\"\\n\")");
hiWindow.document.writeln("            let currentTask;");
hiWindow.document.writeln("            let hours;");
hiWindow.document.writeln("            let increase = false;");
hiWindow.document.writeln("            let decrease = false;");
hiWindow.document.writeln("            for (let i = 0; i < lines.length; i++) {");
hiWindow.document.writeln("                let line = lines[i];");
hiWindow.document.writeln("                //console.log(\"LINE|\" + line);");
hiWindow.document.writeln("                if (line.length === 0 || line === null) {");
hiWindow.document.writeln("                    continue;");
hiWindow.document.writeln("                }");
hiWindow.document.writeln("                let firstLetter = line[0];");
hiWindow.document.writeln("                if (firstLetter === \"#\") {");
hiWindow.document.writeln("                    continue;");
hiWindow.document.writeln("                }");
hiWindow.document.writeln("                if (firstLetter === \"=\") {");
hiWindow.document.writeln("                    increase = false;");
hiWindow.document.writeln("                    decrease = false;");
hiWindow.document.writeln("                    hours = parseFloat(\"0\");");
hiWindow.document.writeln("                    currentTask = line.split(\"====\")[1];");
hiWindow.document.writeln("                    //console.log(\"\\t-->TASK|\" + currentTask);");
hiWindow.document.writeln("                }");
hiWindow.document.writeln("                if (firstLetter === \"+\") {");
hiWindow.document.writeln("                    increase = true;");
hiWindow.document.writeln("                    if (parseFloat(\"0,1\") === 0) {");
hiWindow.document.writeln("                        hours = parseFloat(line.replaceAll(\",\", \".\").split(\"+\")[1]);");
hiWindow.document.writeln("                    } else {");
hiWindow.document.writeln("                        hours = parseFloat(line.replaceAll(\".\", \",\").split(\"+\")[1]);");
hiWindow.document.writeln("                    }");
hiWindow.document.writeln("                    if (hours === null || hours === parseFloat(\"0\")) {");
hiWindow.document.writeln("                        continue;");
hiWindow.document.writeln("                    }");
hiWindow.document.writeln("                    //console.log(\"\\thours=\" + hours);");
hiWindow.document.writeln("                    let foundTaskMenu = document.querySelector('#foundTasks');");
hiWindow.document.writeln("                    let foundTaskElements = foundTaskMenu.children;");
hiWindow.document.writeln("                    for (let i = 0; i < foundTaskElements.length; i++) {");
hiWindow.document.writeln("                        let foundTask = foundTaskElements[i].value;");
hiWindow.document.writeln("                        if (currentTask === foundTask) {");
hiWindow.document.writeln("                            document.querySelector('#foundTasks').value = foundTask;");
hiWindow.document.writeln("                            document.querySelector('#hoursAmount').value = hours;");
hiWindow.document.writeln("                            document.querySelector('#insertButton').onclick();");
hiWindow.document.writeln("                            //console.log(\"\\t--> +  |\" + hours);");
hiWindow.document.writeln("                            break;");
hiWindow.document.writeln("                        }");
hiWindow.document.writeln("                    }");
hiWindow.document.writeln("                }");
hiWindow.document.writeln("                if (firstLetter === \"-\") {");
hiWindow.document.writeln("                    increase = true;");
hiWindow.document.writeln("                    if (parseFloat(\"0,1\") === 0) {");
hiWindow.document.writeln("                        hours = parseFloat(line.replaceAll(\",\", \".\").split(\"-\")[1]);");
hiWindow.document.writeln("                    } else {");
hiWindow.document.writeln("                        hours = parseFloat(line.replaceAll(\".\", \",\").split(\"-\")[1]);");
hiWindow.document.writeln("                    }");
hiWindow.document.writeln("                    if (hours === null || hours === parseFloat(\"0\")) {");
hiWindow.document.writeln("                        continue;");
hiWindow.document.writeln("                    }");
hiWindow.document.writeln("                    //console.log(\"\\thours=\" + hours);");
hiWindow.document.writeln("                    let foundTaskMenu = document.querySelector('#foundTasks');");
hiWindow.document.writeln("                    let foundTaskElements = foundTaskMenu.children;");
hiWindow.document.writeln("                    for (let i = 0; i < foundTaskElements.length; i++) {");
hiWindow.document.writeln("                        let foundTask = foundTaskElements[i].value;");
hiWindow.document.writeln("                        if (currentTask === foundTask) {");
hiWindow.document.writeln("                            document.querySelector('#foundTasks').value = foundTask;");
hiWindow.document.writeln("                            document.querySelector('#hoursAmount').value = hours;");
hiWindow.document.writeln("                            document.querySelector('#removeButton').onclick();");
hiWindow.document.writeln("                            //console.log(\"\\t--> -  |\" + hours);");
hiWindow.document.writeln("                            break;");
hiWindow.document.writeln("                        }");
hiWindow.document.writeln("                    }");
hiWindow.document.writeln("                }");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("            }");
hiWindow.document.writeln("        }");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("        parseReadTxt();");
hiWindow.document.writeln("    }");
hiWindow.document.writeln(" ");
hiWindow.document.writeln("</script>");
hiWindow.document.writeln("</body>");
hiWindow.document.writeln("</html>");
